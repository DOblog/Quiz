{"version":3,"sources":["context.js","history.js","reducer.js","actions/types.js","store.js","core/Layout.jsx","actions/loadQuestions.js","api/index.js","constants.js","pages/Home.jsx","components/Button.jsx","actions/loadQuestionData.js","components/Question.jsx","utils/declension.js","components/Score.jsx","pages/Quiz.jsx","actions/results.js","pages/Result.jsx","serviceWorker.js","index.js","App.js"],"names":["StoreContext","createContext","history","createBrowserHistory","reducer","state","arguments","length","undefined","initialState","_ref","type","payload","Object","objectSpread","list","loading","error","map","obj","id","questionId","selectedAnswer","data","results","result","concat","toConsumableArray","resultsString","localStorage","getItem","JSON","parse","Layout","children","react_default","a","createElement","className","loadQuestions","dispatch","mapped","sort","Math","random","slice","question","options","Promise","resolve","setTimeout","getQuestions","then","loadQuestionsSuccess","catch","loadQuestionsFailure","Home","useContext","Link","to","onClick","Button","disabled","disable","cx","btn","btn-success","stateTypes","RIGHT","btn-danger","WRONG","loadQuestionData","loadQuestionDataStart","reject","item","find","loadQuestionDataFailure","freeze","NOT_SELECTED","Question","rightAnswer","comment","dangerouslySetInnerHTML","__html","option","index","buttonState","key","selectOption","secondsDeclension","seconds","oneNominative","severalGenitive","severalNominative","number","Score","timer","rightAnswersCount","filter","_ref2","wrongAnswersCount","_ref3","noAnswersCount","Quiz","_useContext","_useState","useState","_useState2","slicedToArray","shouldRedirect","setRedirectPosibility","_useState3","_useState4","setTimer","useEffect","timeout","clearInterval","SECONDS_BEFORE_REDIRECT","date","Date","toISOString","answers","time","addNewResult","setItem","stringify","Redirect","components_Question","assign","Result","_useContext$state","_results","toArray","_results$","rest","Fragment","replace","Boolean","window","location","hostname","match","ReactDOM","render","_useReducer","useReducer","_useReducer2","Provider","value","Router","Switch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d920ae9c.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const StoreContext = createContext();\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n","import { initialState } from './store';\r\nimport * as types from './actions/types';\r\n\r\n/* \r\nstate = {\r\n  loading: false,\r\n  error: null,\r\n  list: [\r\n    {\r\n      id: 1,\r\n      question: ...,\r\n      options: ...,\r\n      rightAnswer: ...,\r\n      selectedAnswer: ...,\r\n      loading: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      question: ...,\r\n      options: ...,\r\n      selectedAnswer: ...,\r\n      loading: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      question: ...,\r\n      options: ...,\r\n    },\r\n  ]\r\n}\r\n*/\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case types.LOAD_QUESTIONS_START:\r\n      return {\r\n        ...state,\r\n        list: [],\r\n        loading: true\r\n      };\r\n\r\n    case types.LOAD_QUESTIONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: payload.list,\r\n        loading: false\r\n      };\r\n\r\n    case types.LOAD_QUESTIONS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: payload.error,\r\n        loading: false\r\n      };\r\n\r\n    case types.LOAD_QUESTION_DATA_START:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(obj =>\r\n          obj.id === payload.questionId\r\n            ? { ...obj, selectedAnswer: payload.selectedAnswer, loading: true }\r\n            : obj\r\n        )\r\n      };\r\n\r\n    case types.LOAD_QUESTION_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(obj =>\r\n          obj.id === payload.data.id\r\n            ? { ...obj, ...payload.data, loading: false }\r\n            : obj\r\n        )\r\n      };\r\n\r\n    case types.LOAD_QUESTION_DATA_FAILURE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(obj =>\r\n          obj.id === payload.questionId\r\n            ? { ...obj, loading: false, error: payload.error }\r\n            : obj\r\n        )\r\n      };\r\n\r\n    case types.ADD_NEW_RESULT:\r\n      return {\r\n        ...state,\r\n        results: [payload.result, ...state.results]\r\n      };\r\n\r\n    case types.CLEAR_RESULTS:\r\n      return {\r\n        ...state,\r\n        results: [state.results[0]]\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const LOAD_QUESTIONS_START = 'LOAD_QUESTIONS_START';\r\nexport const LOAD_QUESTIONS_SUCCESS = 'LOAD_QUESTIONS_SUCCESS';\r\nexport const LOAD_QUESTIONS_FAILURE = 'LOAD_QUESTIONS_FAILURE';\r\n\r\nexport const LOAD_QUESTION_DATA_START = 'LOAD_QUESTION_DATA_START';\r\nexport const LOAD_QUESTION_DATA_SUCCESS = 'LOAD_QUESTION_DATA_SUCCESS';\r\nexport const LOAD_QUESTION_DATA_FAILURE = 'LOAD_QUESTION_DATA_FAILURE';\r\n\r\nexport const ADD_NEW_RESULT = 'ADD_NEW_RESULT';\r\nexport const CLEAR_RESULTS = 'CLEAR_RESULTS';","import reducer from './reducer';\r\n\r\nconst resultsString = localStorage.getItem('results');\r\n\r\nconst initialState = {\r\n  results: resultsString ? JSON.parse(resultsString) : []\r\n};\r\n\r\nexport { reducer, initialState };\r\n","import React from 'react';\r\n\r\nexport default ({ children }) => (\r\n  <div className=\"wrapper\">\r\n    <header className=\"header\">Лучшие тесты по джаваскрипту</header>\r\n    <main className=\"content\">{children}</main>\r\n    <footer className=\"footer\">Д. Облог © 2018</footer>\r\n  </div>\r\n);\r\n","import * as types from './types';\r\nimport { getQuestions } from '../api';\r\n\r\nexport const loadQuestionsStart = () => ({\r\n  type: types.LOAD_QUESTIONS_START\r\n});\r\n\r\nexport const loadQuestionsSuccess = list => ({\r\n  type: types.LOAD_QUESTIONS_SUCCESS,\r\n  payload: { list }\r\n});\r\n\r\nexport const loadQuestionsFailure = error => ({\r\n  type: types.LOAD_QUESTIONS_FAILURE,\r\n  payload: { error }\r\n});\r\n\r\nexport default dispatch => {\r\n  dispatch(loadQuestionsStart());\r\n  return getQuestions()\r\n    .then(list => {\r\n      dispatch(loadQuestionsSuccess(list));\r\n    })\r\n    .catch(error => dispatch(loadQuestionsFailure(error)));\r\n};\r\n","import data from '../data.json';\r\nimport { QUESTIONS_PER_PAGE } from '../constants';\r\n\r\nexport const getQuestions = () => {\r\n  const shuffled = [...data].sort(() => 0.5 - Math.random());\r\n  const mapped = shuffled\r\n    .slice(0, QUESTIONS_PER_PAGE)\r\n    .map(({ id, question, options }) => ({ id, question, options }));\r\n\r\n  return new Promise(resolve => setTimeout(() => resolve(mapped), 500));\r\n};\r\n\r\nexport const getQuestionData = id =>\r\n  new Promise((resolve, reject) => {\r\n    const item = data.find(obj => obj.id === id);\r\n\r\n    if (item) {\r\n      setTimeout(() => {\r\n        resolve(item);\r\n      }, 500);\r\n    } else {\r\n      setTimeout(() => {\r\n        reject({ error: 'Нет такого вопроса' });\r\n      }, 500);\r\n    }\r\n  });\r\n","export const QUESTIONS_PER_PAGE = 10;\r\nexport const TIMER_DURATION_SECONDS = 180;\r\n","import React, { useContext } from 'react';\r\nimport { StoreContext } from '../context';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Layout from '../core/Layout';\r\nimport loadQuestions from '../actions/loadQuestions';\r\n\r\nexport default () => {\r\n  const { dispatch } = useContext(StoreContext);\r\n\r\n  return (\r\n    <Layout>\r\n      <Link to=\"/quiz\" className=\"btn btn-info\" onClick={() => loadQuestions(dispatch)}>\r\n        Начать тест\r\n      </Link>\r\n    </Layout>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport cx from 'classnames';\r\nimport { stateTypes} from './Question';\r\n\r\nexport default ({ children, state, onClick, disabled, loading }) => {\r\n  if (loading) {\r\n    return <button className=\"btn\" disable><i className=\"fa fa-circle-o-notch fa-spin\"></i></button>;\r\n  }\r\n\r\n  const className = cx({\r\n    btn: true,\r\n    'btn-success': state === stateTypes.RIGHT,\r\n    'btn-danger': state === stateTypes.WRONG\r\n  });\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={className}\r\n      disabled={disabled}\r\n      type=\"button\"\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import * as types from './types';\r\nimport { getQuestionData } from '../api';\r\n\r\nexport const loadQuestionDataStart = (selectedAnswer, questionId) => ({\r\n  type: types.LOAD_QUESTION_DATA_START,\r\n  payload: { questionId, selectedAnswer }\r\n});\r\n\r\nexport const loadQuestionDataSuccess = data => ({\r\n  type: types.LOAD_QUESTION_DATA_SUCCESS,\r\n  payload: { data }\r\n});\r\n\r\nexport const loadQuestionDataFailure = (questionId, error) => ({\r\n  type: types.LOAD_QUESTION_DATA_FAILURE,\r\n  payload: { questionId, error }\r\n});\r\n\r\nexport default (dispatch, selectedAnswer, questionId) => {\r\n  dispatch(loadQuestionDataStart(selectedAnswer, questionId));\r\n  return getQuestionData(questionId)\r\n    .then(list => dispatch(loadQuestionDataSuccess(list)))\r\n    .catch(error => dispatch(loadQuestionDataFailure(questionId, error)));\r\n};\r\n","import React, { useContext } from 'react';\r\n\r\nimport { StoreContext } from '../context';\r\n\r\nimport Button from './Button';\r\n\r\nimport loadQuestionData from '../actions/loadQuestionData';\r\n\r\nexport const stateTypes = Object.freeze({\r\n  RIGHT: 'RIGHT',\r\n  WRONG: 'WRONG',\r\n  NOT_SELECTED: 'NOT_SELECTED'\r\n});\r\n\r\nconst selectOption = (dispatch, selectedAnswer, questionId) => () => {\r\n  loadQuestionData(dispatch, selectedAnswer, questionId);\r\n};\r\n\r\nconst Question = ({\r\n  id,\r\n  question,\r\n  options,\r\n  selectedAnswer,\r\n  rightAnswer,\r\n  loading,\r\n  comment\r\n}) => {\r\n  const { dispatch } = useContext(StoreContext);\r\n\r\n  return (\r\n    <div>\r\n      <p>Что вернет этот код?</p>\r\n      <div dangerouslySetInnerHTML={{ __html: question }} />\r\n      <div className=\"options\">\r\n        {options.map((option, index) => {\r\n          let buttonState = stateTypes.NOT_SELECTED;\r\n          if (index === rightAnswer) {\r\n            buttonState = stateTypes.RIGHT;\r\n          }\r\n          if (index === selectedAnswer && selectedAnswer !== rightAnswer) {\r\n            buttonState = stateTypes.WRONG;\r\n          }\r\n\r\n          return (\r\n            <Button\r\n              key={index}\r\n              disabled={selectedAnswer !== undefined || loading}\r\n              state={buttonState}\r\n              onClick={selectOption(dispatch, index, id)}\r\n              loading={loading && selectedAnswer === index}\r\n            >\r\n              {option}\r\n            </Button>\r\n          );\r\n        })}\r\n      </div>\r\n      {comment && <div>{comment}</div>}\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","const declension = (\r\n  oneNominative,\r\n  severalGenitive,\r\n  severalNominative,\r\n  number\r\n) => {\r\n  number = number % 100;\r\n\r\n  return number <= 14 && number >= 11\r\n    ? severalGenitive\r\n    : (number %= 10) < 5\r\n    ? number > 2\r\n      ? severalNominative\r\n      : number === 1\r\n      ? oneNominative\r\n      : number === 0\r\n      ? severalGenitive\r\n      : severalNominative\r\n    : severalGenitive;\r\n};\r\n\r\nexport const secondsDeclension = seconds =>\r\n  declension('секунда', 'секунд', 'секунды', seconds);\r\n","import React, { useContext } from 'react';\r\n\r\nimport { secondsDeclension } from '../utils/declension';\r\nimport { StoreContext } from '../context';\r\n\r\nexport default ({timer}) => {\r\n  const { state: {list} } = useContext(StoreContext);\r\n\r\n  if (!list) {\r\n    return <div className=\"score-widget\">...</div>;\r\n  }\r\n\r\n  const rightAnswersCount = list.filter(\r\n    ({ selectedAnswer, rightAnswer, loading }) =>\r\n      !loading && selectedAnswer !== undefined && selectedAnswer === rightAnswer\r\n  ).length;\r\n  const wrongAnswersCount = list.filter(\r\n    ({ selectedAnswer, rightAnswer, loading }) =>\r\n      !loading && selectedAnswer !== undefined && selectedAnswer !== rightAnswer\r\n  ).length;\r\n  const noAnswersCount = list.length - (rightAnswersCount + wrongAnswersCount);\r\n\r\n  return (\r\n    <div className=\"score-widget\">\r\n      <p>Правильно: {rightAnswersCount}</p>\r\n      <p>Неравильно: {wrongAnswersCount}</p>\r\n      <p>Осталось: {noAnswersCount}</p>\r\n      <hr />\r\n      <p>\r\n        Осталось <strong>{timer}</strong> {secondsDeclension(timer)}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { StoreContext } from '../context';\r\n\r\nimport Layout from '../core/Layout';\r\n\r\nimport Question from '../components/Question';\r\nimport Score from '../components/Score';\r\nimport { addNewResult } from '../actions/results';\r\n\r\nimport { QUESTIONS_PER_PAGE, TIMER_DURATION_SECONDS } from '../constants';\r\n\r\nconst SECONDS_BEFORE_REDIRECT = 3;\r\n\r\nexport default () => {\r\n  const { dispatch, state } = useContext(StoreContext);\r\n  const { list, loading, error, results } = state;\r\n\r\n  const [shouldRedirect, setRedirectPosibility] = useState(false);\r\n  const [timer, setTimer] = useState(TIMER_DURATION_SECONDS);\r\n\r\n  const rightAnswersCount =\r\n    list &&\r\n    list.filter(\r\n      ({ selectedAnswer, rightAnswer, loading }) =>\r\n        !loading &&\r\n        selectedAnswer !== undefined &&\r\n        selectedAnswer === rightAnswer\r\n    ).length;\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setTimer(timer - 1), 1000);\r\n\r\n    return () => clearInterval(timeout);\r\n  });\r\n\r\n  const selectedAnswersCount =\r\n    list &&\r\n    list.filter(\r\n      ({ selectedAnswer, loading }) => !loading && selectedAnswer !== undefined\r\n    ).length;\r\n\r\n  if (selectedAnswersCount === QUESTIONS_PER_PAGE) {\r\n    setTimeout(\r\n      () => setRedirectPosibility(true),\r\n      SECONDS_BEFORE_REDIRECT * 1000\r\n    );\r\n  }\r\n\r\n  if (shouldRedirect || timer === 0) {\r\n    const result = {\r\n      date: new Date().toISOString(),\r\n      answers: rightAnswersCount,\r\n      time:\r\n        TIMER_DURATION_SECONDS -\r\n        timer -\r\n        (shouldRedirect ? SECONDS_BEFORE_REDIRECT : 0)\r\n    };\r\n    dispatch(addNewResult(result));\r\n    localStorage.setItem('results', JSON.stringify([result, ...results]));\r\n\r\n    return <Redirect to=\"/result\" />;\r\n  }\r\n\r\n  if (loading === undefined) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <Layout>\r\n        <h2>Загрузка</h2>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Layout>\r\n        <h2>Ошибка при загрузке</h2>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <h2>Выберите правильный ответ:</h2>\r\n      <Score timer={timer} />\r\n      <div>\r\n        {list.map(data => (\r\n          <Question {...data} key={data.id} />\r\n        ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n","import * as types from './types';\r\n\r\nexport const addNewResult = result => ({\r\n  type: types.ADD_NEW_RESULT,\r\n  payload: { result }\r\n});\r\n\r\nexport const clearResults = () => ({\r\n  type: types.CLEAR_RESULTS,\r\n});","import React, { useContext } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { StoreContext } from '../context';\r\nimport { QUESTIONS_PER_PAGE } from '../constants';\r\n\r\nimport { secondsDeclension } from '../utils/declension';\r\nimport { clearResults } from '../actions/results';\r\n\r\nimport Layout from '../core/Layout';\r\n\r\nexport default () => {\r\n  const {\r\n    dispatch,\r\n    state: { results, loading }\r\n  } = useContext(StoreContext);\r\n\r\n  if (loading === undefined || results.length === 0) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const [{ time, answers }, ...rest] = results;\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>\r\n        {answers} / {QUESTIONS_PER_PAGE} за {time}&nbsp;\r\n        {secondsDeclension(time)}!\r\n      </h1>\r\n      <Link to=\"/\" className=\"btn btn-info\">\r\n        Начать заново\r\n      </Link>\r\n      {rest.length > 0 && (\r\n        <>\r\n          <h2>Предыдущие попытки</h2>\r\n          <table className=\"table table-dark\">\r\n            <tr>\r\n              <th>Дата</th>\r\n              <th>Длительность</th>\r\n              <th>Правильных ответов</th>\r\n            </tr>\r\n            {rest.map(({ date, time, answers }) => (\r\n              <tr>\r\n                <td>{date.slice(0, -5).replace('T', ' ')}</td>\r\n                <td>{time}</td>\r\n                <td>\r\n                  {answers} / {QUESTIONS_PER_PAGE}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              dispatch(clearResults());\r\n              localStorage.setItem('results', JSON.stringify([results[0]]));\r\n            }}\r\n          >\r\n            Очистить\r\n          </button>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useReducer } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport { StoreContext } from './context';\nimport { history } from './history';\nimport { reducer, initialState } from './store';\n\nimport Home from './pages/Home';\nimport Quiz from './pages/Quiz';\nimport Result from './pages/Result';\n\nexport default () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <StoreContext.Provider value={{ dispatch, state }}>\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/quiz\" component={Quiz} />\n          <Route exact path=\"/result\" component={Result} />\n        </Switch>\n      </Router>\n    </StoreContext.Provider>\n  );\n};\n"],"sourceRoot":""}